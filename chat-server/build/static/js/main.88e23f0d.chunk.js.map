{"version":3,"sources":["SocketContext.js","components/WelcomePage.js","utils/formatTimestamp.js","components/MessageBox.js","components/MessageWindow.js","components/MessageBoxInput.js","components/LiveUserWindow.js","components/ChatPage.js","App.js","index.js"],"names":["SocketContext","createContext","memo","useState","name","setName","location","useLocation","socket","useContext","Paper","className","Typography","variant","color","component","TextField","id","label","value","onChange","event","target","Button","disabled","onClick","emit","room","pathname","slice","formatTimestamp","timestamp","Date","toLocaleTimeString","sender","text","isOwn","Card","cx","key","CardHeader","title","subheader","CardContent","messages","setMessages","on","message","newMessage","map","setText","placeholder","users","setUsers","console","log","noWrap","List","index","ListItem","ListItemText","primary","Grid","container","spacing","item","xs","App","isJoined","setIsJoined","setSocket","history","useHistory","useEffect","newSocket","Socket","connect","push","disconnect","Provider","StylesProvider","injectFirst","Container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.88e23f0d.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nexport const SocketContext = createContext();\n","import React, { memo, useContext, useEffect, useState } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport \"./WelcomePage.css\";\nimport { SocketContext } from \"../SocketContext\";\nimport { useLocation  } from \"react-router-dom\";\n\nconst WelcomePage = () => {\n  const [name, setName] = useState(\"\");\n  const location = useLocation();\n  const socket = useContext(SocketContext);\n  const handleChange = (event) => {\n    setName(event.target.value);\n  };\n  const handleClick = () => {\n    socket.emit(\"sendName\", { name: name, room: location.pathname.slice(1) });\n  };\n\n  return (\n    <Paper className=\"WelcomePage_paper\">\n      <Typography variant=\"subtitle1\" color=\"primary\" component=\"h1\">\n        My chat server\n      </Typography>\n      <TextField\n        id=\"username\"\n        label={name ? \"Name\" : \"Enter your name\"}\n        value={name}\n        onChange={handleChange}\n        className=\"WelcomePage_field\"\n      />\n      <Button\n        variant=\"outlined\"\n        color=\"primary\"\n        disabled={!name}\n        onClick={handleClick}\n      >\n        Join chat\n      </Button>\n    </Paper>\n  );\n};\n\nexport default memo(WelcomePage);\n","const formatTimestamp = (timestamp) => {\n    return new Date(timestamp).toLocaleTimeString(\"en-US\");\n};\n\nexport default formatTimestamp;\n","import React, { memo } from \"react\";\nimport { CardHeader } from \"@material-ui/core\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Card from \"@material-ui/core/Card\";\nimport formatTimestamp from \"../utils/formatTimestamp\";\nimport cx from \"classnames\";\nimport \"./MessageBox.css\";\n\nconst MessageBox = ({ timestamp, sender, text, isOwn }) => (\n  <Card\n    className={cx(\"MessageBox\", `MessageBox__owner-${isOwn ? \"me\" : \"other\"}`)}\n    key={timestamp + sender}\n    variant=\"outlined\"\n  >\n    <CardHeader\n      title={\n        <Typography variant=\"subtitle1\" color=\"primary\">\n          {sender}\n        </Typography>\n      }\n      subheader={\n        <Typography variant=\"subtitle2\" color=\"textSecondary\">\n          {formatTimestamp(timestamp)}\n        </Typography>\n      }\n    />\n    <CardContent>\n      <Typography>{text}</Typography>\n    </CardContent>\n  </Card>\n);\n\nexport default memo(MessageBox);\n","import React, { memo, useContext, useState } from \"react\";\nimport \"./MessageWindow.css\";\nimport Paper from \"@material-ui/core/Paper\";\nimport MessageBox from \"./MessageBox\";\nimport { SocketContext } from \"../SocketContext\";\n\nconst MessageWindow = () => {\n  const [messages, setMessages] = useState([]);\n  const socket = useContext(SocketContext);\n\n  socket.on(\"broadcastChatMessage\", (message) => {\n    const newMessage = {\n      timestamp: message.timestamp,\n      sender: message.sender,\n      text: message.text,\n      isOwn: message.id === socket.id,\n    };\n    setMessages([...messages, newMessage]);\n  });\n\n  socket.on(\"serverMessage\", (message) => {\n    const newMessage = {\n      timestamp: message.timestamp,\n      sender: \"System\",\n      text: message.text,\n      isOwn: false,\n    };\n    setMessages([...messages, newMessage]);\n  });\n\n  return (\n    <Paper className=\"MessageWindow\">\n      {messages.map(({ timestamp, sender, text, isOwn }) => (\n        <MessageBox\n          key={timestamp}\n          timestamp={timestamp}\n          sender={sender}\n          text={text}\n          isOwn={isOwn}\n        />\n      ))}\n    </Paper>\n  );\n};\n\nexport default memo(MessageWindow);\n","import React, { memo, useContext, useState } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Button } from \"@material-ui/core\";\nimport \"./MessageBoxInput.css\";\nimport { SocketContext } from \"../SocketContext\";\n\nconst MessageBoxInput = () => {\n  const [text, setText] = useState(\"\");\n  const handleChange = (event) => {\n    setText(event.target.value);\n  };\n  const socket = useContext(SocketContext);\n  const handleClick = () => {\n    if (socket) {\n      socket.emit(\"sendChatMessage\", text);\n      setText(\"\");\n    }\n  };\n\n  return (\n    <Paper className=\"MessageBoxInput\">\n      <TextField\n        placeholder=\"Enter your message\"\n        value={text}\n        onChange={handleChange}\n        className=\"MessageBoxInput_field\"\n      />\n      <Button\n        onClick={handleClick}\n        variant=\"outlined\"\n        color=\"primary\"\n        disabled={!text}\n      >\n        Send\n      </Button>\n    </Paper>\n  );\n};\n\nexport default memo(MessageBoxInput);\n","import React, { memo, useContext, useState } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport \"./LiveUserWindow.css\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { SocketContext } from \"../SocketContext\";\n\nconst LiveUserWindow = () => {\n  const [users, setUsers] = useState([]);\n  const socket = useContext(SocketContext);\n  socket.on(\"liveRoomUsers\", (users) => {\n    console.log(users);\n    if (users) {\n      setUsers(users);\n    }\n  });\n\n  return (\n    <Paper className=\"LiveUserWindow\">\n      <Typography\n        className=\"LiveUserWindow-header\"\n        variant=\"subtitle1\"\n        color=\"secondary\"\n        noWrap\n      >\n        Live users\n      </Typography>\n      <List>\n        {users.map((value, index) => (\n          <ListItem key={value}>\n            <ListItemText primary={`${index + 1}. ${value}`} />\n          </ListItem>\n        ))}\n      </List>\n    </Paper>\n  );\n};\n\nexport default memo(LiveUserWindow);\n","import React, { memo } from \"react\";\nimport \"./ChatPage.css\";\nimport MessageWindow from \"./MessageWindow\";\nimport MessageBoxInput from \"./MessageBoxInput\";\nimport { Grid } from \"@material-ui/core\";\nimport LiveUserWindow from \"./LiveUserWindow\";\n\nconst ChatPage = () => {\n  return (\n    <Grid container spacing={3}>\n      <Grid className=\"ChatPage-header\" item xs={12} />\n      <Grid item xs={3} />\n      <Grid item xs={6}>\n        <MessageWindow />\n        <MessageBoxInput />\n      </Grid>\n      <Grid item xs={3}>\n        <LiveUserWindow />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default memo(ChatPage);\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { Container } from \"@material-ui/core\";\nimport WelcomePage from \"./components/WelcomePage\";\nimport cx from \"classnames\";\nimport { StylesProvider } from \"@material-ui/styles\";\nimport ChatPage from \"./components/ChatPage\";\nimport { SocketContext } from \"./SocketContext\";\nimport Socket from \"socket.io-client\";\nimport { useHistory } from \"react-router-dom\";\n\nconst App = () => {\n  const [isJoined, setIsJoined] = useState(false);\n  const [socket, setSocket] = useState(null);\n  const history = useHistory();\n\n  useEffect(() => {\n    const newSocket = Socket.connect(\"127.0.0.1:3001\");\n    setSocket(newSocket);\n    newSocket.on(\"successEnter\", (room) => {\n      history.push(`/${room}`);\n      setIsJoined(true);\n    });\n    return () => socket && socket.disconnect();\n  }, []);\n\n  return (\n    <SocketContext.Provider value={socket}>\n      <StylesProvider injectFirst>\n        <Container\n          className={cx(\"App_container\", !isJoined && \"App_container__modal\")}\n        >\n          {!isJoined ? <WelcomePage /> : <ChatPage />}\n        </Container>\n      </StylesProvider>\n    </SocketContext.Provider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}